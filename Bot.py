import logging
import pandas as pd
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.INFO
)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Excel
try:
    df = pd.read_excel("users.xlsx")
except FileNotFoundError:
    logging.error("–§–∞–π–ª users.xlsx –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–Ω –≤ —Ç–æ–π –∂–µ –ø–∞–ø–∫–µ, —á—Ç–æ –∏ —Å–∫—Ä–∏–ø—Ç.")
    exit(1)

# –ü—Ä–∏–≤–æ–¥–∏–º "–ù–æ–º–µ—Ä —Å—á—ë—Ç—á–∏–∫–∞" –∫ —Å—Ç—Ä–æ–∫–æ–≤–æ–º—É —Ç–∏–ø—É
df["–ù–æ–º–µ—Ä —Å—á—ë—Ç—á–∏–∫–∞"] = df["–ù–æ–º–µ—Ä —Å—á—ë—Ç—á–∏–∫–∞"].astype(str).str.strip()

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–º–µ—Ä —Å—á—ë—Ç—á–∏–∫–∞, –∏ —è –≤–µ—Ä–Ω—É –ª–∏—Ü–µ–≤–æ–π —Å—á—ë—Ç –∏ –§–ò–û."
    )

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    meter_number = update.message.text.strip()
    logging.info(f"–ó–∞–ø—Ä–æ—Å –ø–æ —Å—á—ë—Ç—á–∏–∫—É: {meter_number}")

    result = df[df["–ù–æ–º–µ—Ä —Å—á—ë—Ç—á–∏–∫–∞"] == meter_number]

    if result.empty:
        await update.message.reply_text("–°—á—ë—Ç—á–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä.")
    else:
        lines = []
        for _, row in result.iterrows():
            fio = str(row.get('–§–ò–û', '')).strip()

            raw_account = row.get('–õ–∏—Ü–µ–≤–æ–π —Å—á–µ—Ç', '')
            if pd.isna(raw_account):
                account = ''
            elif isinstance(raw_account, float) and raw_account.is_integer():
                account = str(int(raw_account))
            else:
                account = str(raw_account).strip()

            lines.append(f"üë§ {fio}  üî¢ {account}")

        response = "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n" + "\n".join(lines)
        await update.message.reply_text(response)

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    TOKEN = "7793615747:AAFwpellAf-o6WYMgDolQZCglS9yqzEJk4k"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω

    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    logging.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    app.run_polling(allowed_updates=Update.ALL_TYPES)
